// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// OrderDeleteReader is a Reader for the OrderDelete structure.
type OrderDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OrderDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 204:
		result := NewOrderDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewOrderDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOrderDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /store/order/{orderId}] OrderDelete", response, response.Code())
	}
}

// NewOrderDeleteNoContent creates a OrderDeleteNoContent with default headers values
func NewOrderDeleteNoContent() *OrderDeleteNoContent {
	return &OrderDeleteNoContent{}
}

/*
OrderDeleteNoContent describes a response with status code 204, with default header values.

Deleted successfully
*/
type OrderDeleteNoContent struct {
}

// IsSuccess returns true when this order delete no content response has a 2xx status code
func (o *OrderDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this order delete no content response has a 3xx status code
func (o *OrderDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this order delete no content response has a 4xx status code
func (o *OrderDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this order delete no content response has a 5xx status code
func (o *OrderDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this order delete no content response a status code equal to that given
func (o *OrderDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the order delete no content response
func (o *OrderDeleteNoContent) Code() int {
	return 204
}

func (o *OrderDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /store/order/{orderId}][%d] orderDeleteNoContent", 204)
}

func (o *OrderDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /store/order/{orderId}][%d] orderDeleteNoContent", 204)
}

func (o *OrderDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOrderDeleteBadRequest creates a OrderDeleteBadRequest with default headers values
func NewOrderDeleteBadRequest() *OrderDeleteBadRequest {
	return &OrderDeleteBadRequest{}
}

/*
OrderDeleteBadRequest describes a response with status code 400, with default header values.

Invalid ID supplied
*/
type OrderDeleteBadRequest struct {
}

// IsSuccess returns true when this order delete bad request response has a 2xx status code
func (o *OrderDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this order delete bad request response has a 3xx status code
func (o *OrderDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this order delete bad request response has a 4xx status code
func (o *OrderDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this order delete bad request response has a 5xx status code
func (o *OrderDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this order delete bad request response a status code equal to that given
func (o *OrderDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the order delete bad request response
func (o *OrderDeleteBadRequest) Code() int {
	return 400
}

func (o *OrderDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /store/order/{orderId}][%d] orderDeleteBadRequest", 400)
}

func (o *OrderDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /store/order/{orderId}][%d] orderDeleteBadRequest", 400)
}

func (o *OrderDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOrderDeleteNotFound creates a OrderDeleteNotFound with default headers values
func NewOrderDeleteNotFound() *OrderDeleteNotFound {
	return &OrderDeleteNotFound{}
}

/*
OrderDeleteNotFound describes a response with status code 404, with default header values.

Order not found
*/
type OrderDeleteNotFound struct {
}

// IsSuccess returns true when this order delete not found response has a 2xx status code
func (o *OrderDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this order delete not found response has a 3xx status code
func (o *OrderDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this order delete not found response has a 4xx status code
func (o *OrderDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this order delete not found response has a 5xx status code
func (o *OrderDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this order delete not found response a status code equal to that given
func (o *OrderDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the order delete not found response
func (o *OrderDeleteNotFound) Code() int {
	return 404
}

func (o *OrderDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /store/order/{orderId}][%d] orderDeleteNotFound", 404)
}

func (o *OrderDeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /store/order/{orderId}][%d] orderDeleteNotFound", 404)
}

func (o *OrderDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
