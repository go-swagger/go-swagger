// Code generated by go-swagger; DO NOT EDIT.

package pet

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PetDeleteReader is a Reader for the PetDelete structure.
type PetDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PetDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 204:
		result := NewPetDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPetDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPetDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /pet/{petId}] PetDelete", response, response.Code())
	}
}

// NewPetDeleteNoContent creates a PetDeleteNoContent with default headers values
func NewPetDeleteNoContent() *PetDeleteNoContent {
	return &PetDeleteNoContent{}
}

/*
PetDeleteNoContent describes a response with status code 204, with default header values.

Deleted successfully
*/
type PetDeleteNoContent struct {
}

// IsSuccess returns true when this pet delete no content response has a 2xx status code
func (o *PetDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this pet delete no content response has a 3xx status code
func (o *PetDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pet delete no content response has a 4xx status code
func (o *PetDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this pet delete no content response has a 5xx status code
func (o *PetDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this pet delete no content response a status code equal to that given
func (o *PetDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the pet delete no content response
func (o *PetDeleteNoContent) Code() int {
	return 204
}

func (o *PetDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /pet/{petId}][%d] petDeleteNoContent", 204)
}

func (o *PetDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /pet/{petId}][%d] petDeleteNoContent", 204)
}

func (o *PetDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPetDeleteBadRequest creates a PetDeleteBadRequest with default headers values
func NewPetDeleteBadRequest() *PetDeleteBadRequest {
	return &PetDeleteBadRequest{}
}

/*
PetDeleteBadRequest describes a response with status code 400, with default header values.

Invalid ID supplied
*/
type PetDeleteBadRequest struct {
}

// IsSuccess returns true when this pet delete bad request response has a 2xx status code
func (o *PetDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pet delete bad request response has a 3xx status code
func (o *PetDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pet delete bad request response has a 4xx status code
func (o *PetDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this pet delete bad request response has a 5xx status code
func (o *PetDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this pet delete bad request response a status code equal to that given
func (o *PetDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the pet delete bad request response
func (o *PetDeleteBadRequest) Code() int {
	return 400
}

func (o *PetDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /pet/{petId}][%d] petDeleteBadRequest", 400)
}

func (o *PetDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /pet/{petId}][%d] petDeleteBadRequest", 400)
}

func (o *PetDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPetDeleteNotFound creates a PetDeleteNotFound with default headers values
func NewPetDeleteNotFound() *PetDeleteNotFound {
	return &PetDeleteNotFound{}
}

/*
PetDeleteNotFound describes a response with status code 404, with default header values.

Pet not found
*/
type PetDeleteNotFound struct {
}

// IsSuccess returns true when this pet delete not found response has a 2xx status code
func (o *PetDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pet delete not found response has a 3xx status code
func (o *PetDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pet delete not found response has a 4xx status code
func (o *PetDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this pet delete not found response has a 5xx status code
func (o *PetDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this pet delete not found response a status code equal to that given
func (o *PetDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the pet delete not found response
func (o *PetDeleteNotFound) Code() int {
	return 404
}

func (o *PetDeleteNotFound) Error() string {
	return fmt.Sprintf("[DELETE /pet/{petId}][%d] petDeleteNotFound", 404)
}

func (o *PetDeleteNotFound) String() string {
	return fmt.Sprintf("[DELETE /pet/{petId}][%d] petDeleteNotFound", 404)
}

func (o *PetDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
