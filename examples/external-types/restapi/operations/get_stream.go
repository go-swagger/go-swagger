// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetStreamHandlerFunc turns a function with the right signature into a get stream handler
type GetStreamHandlerFunc func(GetStreamParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetStreamHandlerFunc) Handle(params GetStreamParams) middleware.Responder {
	return fn(params)
}

// GetStreamHandler interface for that can handle valid get stream params
type GetStreamHandler interface {
	Handle(GetStreamParams) middleware.Responder
}

// NewGetStream creates a new http.Handler for the get stream operation
func NewGetStream(ctx *middleware.Context, handler GetStreamHandler) *GetStream {
	return &GetStream{Context: ctx, Handler: handler}
}

/*
	GetStream swagger:route GET /stream getStream

GetStream get stream API
*/
type GetStream struct {
	Context *middleware.Context
	Handler GetStreamHandler
}

func (o *GetStream) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetStreamParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
