version: "2"
linters:
  # Project stance regarding linting - see also https://github.com/go-swagger/go-swagger/issues/3237:
  #
  # * we enable all linters by default
  # * we disable explicitly linters which:
  #   * do not correspond to our own views of go best practices (e.g. recvcheck, nonamedreturns)
  #   * impose a lot of (cosmetic) changes for no real value AND do not provide an auto-fix (e.g. godox, nlreturn)
  #   * impose a lot of not-cosmetic changes with no high value AND do not provide an auto-fix (e.g. err113)
  #   * introduce breaking changes (normally, we should disable them sparingly with code hints, no globally)
  #   * we overall agree with but are temporarily disabled: these issues would be addressed progressively
  #
  # This project has been living around for about 10 years now.
  # It adopted golangci-lint as one of its early adopters.
  # Since then, we've seen a lot of back and forth on how we should write good go code.
  # So we pick every month's new doxa with a pinch of salt.
  default: all
  disable:
    - dupl  # temporary => should be disabled sparingly
    - err113 # temporary
    - exhaustruct # temporary
    - funlen # temporary
    - gochecknoglobals  # agree, but breaking
    - gochecknoinits # agree, but breaking
    - godox # temporary
    - ireturn # temporary
    - lll # unclear added value
    - nestif # temporary
    - nonamedreturns # unclear added value
    - nlreturn # unclear added value
    - noinlineerr # unclear added value
    - paralleltest # unclear added value
    - recvcheck  # disagree
    - tagliatelle # false positives, want to impose camel case everywhere => should be disabled sparingly only
    - testpackage # disagree: we like test packages, just not for everything like the linter suggest
    - tparallel
    - varnamelen
    - wrapcheck
    - wsl # unclear added value
    - wsl_v5 # unclear added value
  settings:
    depguard:
      rules:
        main:
          list-mode: lax
          deny:
            - pkg: github.com/pkg/errors
              desc: Use errors or fmt instead of github.com/pkg/errors
    dupl:
      threshold: 200
    goconst:
      min-len: 2
      min-occurrences: 3
    gocyclo:
      min-complexity: 30
    cyclop:
      max-complexity: 30
    govet:
      enable-all: true
      disable:
        - fieldalignment
    thelper:
      tb:
        name: false  # dont' want issue "parameter testing.TB should have name tb"
    testifylint:
      enable:
        - bool-compare
        - compares
        - empty
        - error-is-as
        - error-nil
        - expected-actual
        - len
        - require-error
        - suite-dont-use-pkg
        - suite-extra-assert-call
        - float-compare
        - go-require
  exclusions:
    warn-unused: false
    generated: disable  # enable linting on generated code (in examples, in generated code under test)
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    paths:
      - fixtures/
      - examples/
    rules:
      # do not exclude examples from linting, but apply slightly different rules
      - path: examples/
        linters:
          - gofumpt # we don't run gofumpt on generated examples, only goimports
      - path: 'generator/generated/'
        linters:
          - gofumpt # we don't run gofumpt on generated code (used during testing)
      - path: _test.go
        linters:
          - unparam
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  new: false
formatters:
  enable:
    - gofumpt
    - goimports
  settings:
    # local prefixes regroup imports from these packages
    goimports:
      local-prefixes:
        - github.com/go-openapi
        - github.com/go-swagger/go-swagger # this is for imports in generated examples
  exclusions:
    # do not exclude examples from linting
    paths:
      - fixtures/
